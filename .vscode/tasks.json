{
	"$schema": "https://json.schemastore.org/tasks.json",
	"version": "2.0.0",
	"tasks": [
		{
			"label": "CMake: configure",
			"type": "shell",
			"command": "cmake -S . -B build/linux",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": []
		},
		{
			"label": "CMake: build",
			"type": "shell",
			"command": "cmake --build build/linux --config Debug --parallel",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"dependsOn": [
				"CMake: configure"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"problemMatcher": [
				"$gcc"
			],
			"detail": "Builds the project using CMake in the build folder"
		},
		{
			"label": "Run: top100_cli",
			"type": "shell",
			"command": "./top100_cli",
			"options": {
				"cwd": "${workspaceFolder}/build/linux"
			},
			"dependsOn": [
				"CMake: build"
			],
			"problemMatcher": []
		},
		{
			"label": "Test: ctest",
			"type": "shell",
			"command": "ctest --output-on-failure",
			"options": {
				"cwd": "${workspaceFolder}/build/linux"
			},
			"dependsOn": [
				"CMake: build"
			],
			"problemMatcher": []
		},
		{
			"label": "CMake: configure",
			"type": "shell",
			"command": "cmake",
			"args": [
				"-S",
				".",
				"-B",
				"build/linux"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "CMake: configure",
			"type": "shell",
			"command": "cmake",
			"args": [
				"-S",
				".",
				"-B",
				"build/linux"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build after OMDb field extensions",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--config",
				"Debug",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build with details view",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--config",
				"Debug",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after linking fix",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--config",
				"Debug",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build with duplicate handling",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--config",
				"Debug",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild with duplicate policy",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--config",
				"Debug",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build after list view change",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--config",
				"Debug",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build with ratings fields",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--config",
				"Debug",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild static lib top100",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--config",
				"Debug",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build and run all tests",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cmake --build build/linux --config Debug --parallel && ctest --test-dir build/linux --output-on-failure"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Reconfigure and build tests",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cmake -S . -B build/linux && cmake --build build/linux --config Debug --parallel && ctest --test-dir build/linux -N"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild and list granular tests",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cmake --build build/linux --config Debug --parallel && ctest --test-dir build/linux -N"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild and rerun failing test",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cmake --build build/linux --config Debug --parallel && ctest --test-dir build/linux -R movie_json_round_trip --output-on-failure"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Configure and build with CMake",
			"type": "shell",
			"command": "cmake -S . -B build/linux && cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Reconfigure and retest (CMake policy 3.30)",
			"type": "shell",
			"command": "cmake -S . -B build/linux && cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build with ranking feature and run tests",
			"type": "shell",
			"command": "cmake -S . -B build/linux && cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Run tests after ranking changes",
			"type": "shell",
			"command": "cd build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after ranking loop change",
			"type": "shell",
			"command": "cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build and Run All Tests (ctest)",
			"type": "shell",
			"command": "cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Run new ranking tests",
			"type": "shell",
			"command": "cd build && ctest -R ranking_ -V",
			"group": "test"
		},
		{
			"label": "Build after config integration",
			"type": "shell",
			"command": "cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after filesystem change",
			"type": "shell",
			"command": "cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure",
			"group": "build"
		},
		{
			"label": "Build and run all tests after menu tests",
			"type": "shell",
			"command": "cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Final rebuild and test full suite",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild and run tests (config+menu features)",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild and run tests after CMake fix",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build after BlueSky feature",
			"type": "shell",
			"command": "cmake --build build --parallel",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after fixes",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after BlueSky header/impl sync",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build and run tests after adding BlueSky tests",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build and run tests for post header/footer",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build project (Top100)",
			"type": "shell",
			"command": "cmake -S /home/andymccall/development/top100 -B /home/andymccall/development/top100/build && cmake --build /home/andymccall/development/top100/build -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after Mastodon integration",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build/linux -j && cd /home/andymccall/development/top100/build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after fixing Multipart",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build/linux -j && cd /home/andymccall/development/top100/build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild (retry)",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build and run tests (OMDb plot changes)",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build/linux -j && cd /home/andymccall/development/top100/build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build and test after preferring full plot",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build/linux -j && cd /home/andymccall/development/top100/build/linux && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild tests after config default fix",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build -j && cd /home/andymccall/development/top100/build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build and run tests for plot/detail changes",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build -j && cd /home/andymccall/development/top100/build && ctest --output-on-failure",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Clean & Rebuild (UIs + Tests)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"rm -rf build/linux && cmake -S . -B build/linux -DTOP100_UI_QT=ON -DTOP100_UI_KDE=ON -DTOP100_ENABLE_TESTS=ON && cmake --build build/linux --parallel && cd build/linux && ctest --output-on-failure"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build",
				"isDefault": false
			},
			"problemMatcher": [
				"$gcc"
			],
			"detail": "Cleans the build folder, configures with both UIs enabled and tests on, builds all, and runs the test suite."
		},
		{
			"label": "Build and run tests",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build -j && cd /home/andymccall/development/top100/build && ctest --output-on-failure",
			"group": "build"
		},
		{
			"label": "Rebuild after post-length changes",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build -j && cd /home/andymccall/development/top100/build && ctest --output-on-failure",
			"group": "build"
		},
		{
			"label": "Build after headers",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build -j && cd /home/andymccall/development/top100/build && ctest --output-on-failure",
			"group": "build"
		},
		{
			"label": "Build (cmake)",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Configure (cmake)",
			"type": "shell",
			"command": "cmake -S . -B build/linux -DTOP100_UI_QT=ON -DTOP100_UI_KDE=ON",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build (cmake) 2",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build (cmake) 3",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after QML fix",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build (cmake) - after UI polish",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild Qt fix",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after capture fix",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after cleanup",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Full rebuild verify",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild with Qt SSL diagnostics",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after poster QLabel tweaks",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild with OMDb poster fallback",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild with window sizing and poster label fix",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Preset: Configure (linux)",
			"type": "shell",
			"command": "cmake --preset linux",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build"
		},
		{
			"label": "Preset: Build (linux)",
			"type": "shell",
			"command": "cmake --build --preset linux",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build"
		},
		{
			"label": "Preset: Configure (haiku)",
			"type": "shell",
			"command": "cmake --preset haiku",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build"
		},
		{
			"label": "Preset: Build (haiku)",
			"type": "shell",
			"command": "cmake --build --preset haiku",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build"
		},
		{
			"label": "Preset: Configure (android)",
			"type": "shell",
			"command": "cmake --preset android",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build"
		},
		{
			"label": "Preset: Build (android)",
			"type": "shell",
			"command": "cmake --build --preset android",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build"
		},
		{
			"label": "Configure linux into build/linux",
			"type": "shell",
			"command": "cmake",
			"args": [
				"-S",
				".",
				"-B",
				"build/linux",
				"-DTOP100_UI_QT=ON",
				"-DTOP100_UI_KDE=ON",
				"-DTOP100_UI_GTK=ON",
				"-DTOP100_ENABLE_TESTS=ON"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build linux targets (kde, qt, gtk, cli)",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cmake --build build/linux --parallel --target top100_kde top100_qt top100_gtk top100_cli"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Build linux targets (kde, qt, gtk, cli) - part 2",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"cmake --build build/linux --parallel --target top100_cli top100_kde top100_qt"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after KDE add dialog layout fix",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after KDE add dialog layout revert/tweak",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after adding spacer to Add dialog",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel",
				"--target",
				"top100_kde"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after increasing top spacing",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel",
				"--target",
				"top100_kde"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after custom header for Add dialog",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel",
				"--target",
				"top100_kde"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after search dialog rework (KDE)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel",
				"--target",
				"top100_kde"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after spacing and style tweaks (KDE dialog)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel",
				"--target",
				"top100_kde"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after shared pane color wiring (KDE)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel",
				"--target",
				"top100_kde"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Rebuild after QML property name fix (KDE)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				"build/linux",
				"--parallel",
				"--target",
				"top100_kde"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Configure (cmake) with Cairo check",
			"type": "shell",
			"command": "cmake -S . -B build -DTOP100_UI_QT=OFF -DTOP100_UI_KDE=OFF -DTOP100_UI_GTK=OFF",
			"group": "build"
		},
		{
			"label": "Build (cmake) - after UI polish",
			"type": "shell",
			"command": "cmake --build build/linux -j",
			"group": "build"
		},
		{
			"label": "Reconfigure (cmake) after cairo alias",
			"type": "shell",
			"command": "cmake -S . -B build/linux",
			"group": "build"
		},
		{
			"label": "Build project (Top100)",
			"type": "shell",
			"command": "cmake --build /home/andymccall/development/top100/build/linux -j",
			"group": "build"
		},
		{
			"label": "Run tests after export wiring",
			"type": "shell",
			"command": "cd build/linux && ctest --output-on-failure",
			"group": "build"
		},
		{
			"label": "Run CLI to smoke test export path prompt",
			"type": "shell",
			"command": "bash -lc 'printf \"e\\n\\nq\\n\" | ./build/linux/top100_cli | head -n 30'",
			"group": "build"
		},
		{
			"label": "Rebuild CLI only",
			"type": "shell",
			"command": "cmake --build build/linux -j --target top100_cli",
			"group": "build"
		},
		{
			"label": "Run CLI for export (smoke)",
			"type": "shell",
			"command": "bash -lc 'printf \"e\\n\\nq\\n\" | ./build/linux/top100_cli | sed -n \"1,40p\"'",
			"group": "build"
		},
		{
			"label": "Build and run tests (export tweaks)",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"group": "build"
		},
		{
			"label": "Rebuild after removing stb",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"group": "build"
		},
		{
			"label": "Configure+Build after JPEG",
			"type": "shell",
			"command": "cmake --build build --parallel && cd build && ctest --output-on-failure",
			"group": "build"
		}
	]
}